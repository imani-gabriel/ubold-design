var d=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty;var N=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports);var b=(s,e,r,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of m(e))!l.call(s,t)&&t!==r&&i(s,t,{get:()=>e[t],enumerable:!(o=u(e,t))||o.enumerable});return s};var w=(s,e,r)=>(r=s!=null?d(h(s)):{},b(e||!s||!s.__esModule?i(r,"default",{value:s,enumerable:!0}):r,s));var g=N(()=>{window.IndexedDBEngine=class{constructor(e,r){this.dbName=e,this.storeName=r}openDB(){return new Promise((e,r)=>{let o=indexedDB.open(this.dbName,1);o.onupgradeneeded=t=>{let c=t.target.result;c.objectStoreNames.contains(this.storeName)||c.createObjectStore(this.storeName,{keyPath:"id",autoIncrement:!0})},o.onsuccess=t=>{e(t.target.result)},o.onerror=t=>{r(t.target.error)}})}addItem(e){return this.openDB().then(r=>new Promise((o,t)=>{let n=r.transaction([this.storeName],"readwrite").objectStore(this.storeName).add(e);n.onsuccess=()=>{o(n.result)},n.onerror=()=>{t(n.error)}}))}getAllItems(){return this.openDB().then(e=>new Promise((r,o)=>{let a=e.transaction([this.storeName],"readonly").objectStore(this.storeName).getAll();a.onsuccess=()=>{r(a.result)},a.onerror=()=>{o(a.error)}}))}deleteItem(e){return this.openDB().then(r=>new Promise((o,t)=>{let n=r.transaction([this.storeName],"readwrite").objectStore(this.storeName).delete(e);n.onsuccess=()=>{o()},n.onerror=()=>{t(n.error)}}))}}});export{N as a,w as b,g as c};
//# sourceMappingURL=chunk-FKWLTOE6.js.map
